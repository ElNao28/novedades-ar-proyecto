name: CI - Cypress Test

# Disparadores para el workflow
on:
  push:
    branches:
      - prueba3    # Ejecutar las pruebas en cualquier rama en cada push
  pull_request:
    branches:
      - main   # Ejecutar las pruebas antes de fusionar a master

  workflow_dispatch:

# Permisos para GitHub Actions
permissions:
  contents: read

jobs:
   e2e-test:
    #name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Node.js (para Angular y Jest)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Versión de Node.js recomendada
          cache: 'npm'  # Configura el caché para npm automáticamente

      # 3. Instalar dependencias del proyecto
      - name: Install dependencies
        run: npm i

      - name: Build the application
        run: npm run build --if-present # Construye la aplicación si es necesario para producción

      - name: Start the application
        run: npm start &
        env:
          CI: true

      - name: Wait for the app to be ready
        run: npx wait-on http://localhost:4200 # Espera a que la aplicación esté lista

      - name: Run Cypress E2E tests
        run: npx cypress run --config baseUrl=http://localhost:4200

      - name: Upload Cypress screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress videos on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: cypress/videos


